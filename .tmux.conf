bind-key & kill-window  
bind-key x kill-pane

# Open window/pane in the same PATH
bind c   new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind %   split-window -h -c "#{pane_current_path}"
# Reload config
bind R   source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Window tab menu
bind-key  -T root  MouseDown3Status      display-menu -T "#[align=centre]#{window_index}:#{window_name}" -t = -x W -y S \
  "Swap Left"                         l "swap-window -t:-1"                                  \
  "Swap Right"                        r "swap-window -t:+1"                                  \
  "#{?pane_marked_set,,-}Swap Marked" s swap-window                                          \
  ""                                                                                         \
  Kill                                X kill-window                                          \
  Respawn                             R "respawn-window -k"                                  \
  "#{?pane_marked,Unmark,Mark}"       m "select-pane -m"                                     \
  Rename                              n "command-prompt -I \"#W\" \"rename-window -- '%%'\"" \
  ""                                                                                         \
  "New After"                         w "new-window -a"                                      \
  "New At End"                        W new-window

# Window status left menu
bind-key  -T root  MouseDown3StatusLeft  display-menu -T "#[align=centre]#{session_name}" -t = -x M -y S \
  Next          n "switch-client -n"                                    \
  Previous      p "switch-client -p"                                    \
  ""                                                                    \
  Renumber      N "move-window -r"                                      \
  Rename        n "command-prompt -I \"#S\" \"rename-session -- '%%'\"" \
  ""                                                                    \
  "New Session" s new-session                                           \
  "New Window"  w "new-window -c \"#{pane_current_path}\""              \

# Window status right menu
bind-key  -T root  MouseDown3StatusRight display-menu -T "#[align=centre]#{client_name}" -t = -x M -y S \
  Detach            d   detach-client                                                        \
  "Detach & Kill"   X   "detach-client -P"                                                   \
  "Detach Others"   o   "detach-client -a"                                                   \
  ""                                                                                         \
  "Save session"    C-s "run-shell ~/.tmux/plugins/tmux-resurrect/scripts/save.sh"           \
  "Restore session" C-r "run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh"        \
  "Switch to"       g   "run-shell ~/.tmux/plugins/tmux-sessionist/scripts/goto_session.sh"  \
  ""                                                                                         \
  "Reload config"   R   "source-file ~/.tmux.conf \; display-message \"Config reloaded...\"" \
  "Install plugin"  I   "run-shell ~/.tmux/plugins/tpm/bindings/install_plugins"             \
  "Update plugins"  I   "run-shell ~/.tmux/plugins/tpm/bindings/update_plugins"              \
  ""                                                                                         \
  Lock              l   lock-client                                                          \

# Pane menu
bind-key  -T root  MouseDown3Pane      display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M \
  "Search regexp"                                                 /   "run-shell ~/.tmux/plugins/tmux-copycat/scripts/copycat_search.sh" \
  "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r "copy-mode -t=; send -Xt= search-backward \"#{q:mouse_word}\""     \
  "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}"       C-y "send-keys -l -- \"#{q:mouse_word}\""                              \
  "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}"       c   "set-buffer -- \"#{q:mouse_word}\""                                \
  "#{?mouse_line,Copy Line,}"                                     l   "set-buffer -- \"#{q:mouse_line}\""                                \
  ""                                                                                                                                     \
  "Toggle logging"                                                P   "run-shell ~/.tmux/plugins/tmux-logging/scripts/toggle_logging.sh" \
  "Screen capture"                                                M-p "run-shell ~/.tmux/plugins/tmux-logging/scripts/screen_capture.sh" \
  "Save history"                                                  M-P "run-shell ~/.tmux/plugins/tmux-logging/scripts/save_complete_history.sh" \
  "Clear pane history"                                            M-c "run-shell ~/.tmux/plugins/tmux-logging/scripts/clear_history.sh"  \
  ""                                                                                                                                     \
  "Horizontal Split"                                              h   "split-window -h -c \"#{pane_current_path}\""                      \
  "Vertical Split"                                                v   "split-window -v -c \"#{pane_current_path}\""                      \
  ""                                                                                                                                     \
  "Swap Up"                                                       u   "swap-pane -U"                                                     \
  "Swap Down"                                                     d   "swap-pane -D"                                                     \
  "#{?pane_marked_set,,-}Swap Marked"                             s   swap-pane                                                          \
  ""                                                                                                                                     \
  Kill                                                            X   kill-pane                                                          \
  Respawn                                                         R   "respawn-pane -k"                                                  \
  "#{?pane_marked,Unmark,Mark}"                                   m   "select-pane -m"                                                   \
  ""                                                                                                                                     \
  "#{?window_zoomed_flag,Unzoom,Zoom}"                            z   "resize-pane -Z"                                                   \

# Use ZSH so that default shell can be changed to tmux
set-option -g default-shell /opt/homebrew/bin/fish

# Initialize Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Copying (prefix + y: command, prefix + Y: PWD)
set -g set-clipboard external
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe'
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'
# Searching (prefix + /, n, N), copying (prefix + y: command, prefix + Y: PWD)
set -g @plugin 'tmux-plugins/tmux-copycat'
# Logging (prefix + P: start, prefix + alt + p: dump pane, prefix + alt + P: full history to file, prefix + alt + c: clear)
set -g @plugin 'tmux-plugins/tmux-logging'

# Mouse support
set -g mouse on
set -g terminal-overrides 'screen*:smcup@:rmcup@'
set -g @scroll-in-moused-over-pane 'on'
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Session management (prefix + s, prefix + r)
set -g @plugin 'tmux-plugins/tmux-resurrect'
# (prefix + g: ask for name and switch to it, prefix + C: create new with a name, prefix + X: killcurrent without exiting tmux, prefix + S: go back to last session, prefix + t + "/%/@: join)
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Sidebar (prefix + tab)
set -g @plugin 'tmux-plugins/tmux-sidebar'

run -b '~/.tmux/plugins/tpm/tpm'

# Default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# Active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# Set active pane border color
set-option -g pane-active-border-style fg=colour214

# Set inactive pane border color
set-option -g pane-border-style fg=colour239

# Message info
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# Writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# Pane number display
set-option -g display-panes-active-colour colour1 #fg2
set-option -g display-panes-colour colour237 #bg1

# Clock
set-window-option -g clock-mode-colour colour109 #blue

# Bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bgdsgd

# Refresh status line every 5 seconds - Good for when music is playing / update time etc
set -g status-interval 5

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150



# Refresh status line every 5 seconds - Good for when music is playing / update time etc
set -g status-interval 5

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 0

# Length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

# Default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1

# Default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

set-option -g status-left ""

set-option -g status-right "\
#[fg=colour214, bg=colour237] \
#[fg=colour223, bg=colour237] #(uptime |  cut -d"," -f1 | sed s/,//g) \
#[fg=colour246, bg=colour237]  %b %d '%y\
#[fg=colour109]  %H:%M \
#[fg=colour248, bg=colour239]"

set-window-option -g window-status-current-format "\
#[fg=colour237, bg=colour214]\
#[fg=colour239, bg=colour214] #I* \
#[fg=colour239, bg=colour214, bold] #W \
#[fg=colour214, bg=colour237]"

set-window-option -g window-status-format "\
#[fg=colour237,bg=colour239,noitalics]\
#[fg=colour223,bg=colour239] #I \
#[fg=colour223, bg=colour239] #W \
#[fg=colour239, bg=colour237]"

# Set the history limit so we get lots of scrollback.
setw -g history-limit 50000000


